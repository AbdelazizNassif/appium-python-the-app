name: Appium Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  appium:
    runs-on: ubuntu-latest

    services:
      adb:
        image: budtmo/docker-android-x86-11.0
        ports:
          - 5555:5555
        options: --privileged

    env:
      ANDROID_HOME: /usr/local/android-sdk
      PATH: $PATH:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

   # Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
    
    # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
    
    # Install emulator and create AVD
      - name: Install emulator
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager "platform-tools" "platforms;android-34" "emulator"
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-34;google_apis;x86_64"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" -d "pixel_4" --force
    
    # Start emulator in background
      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -noaudio -no-window -no-snapshot -no-boot-anim -gpu swiftshader_indirect &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

      - name: Start Appium server
        run: |
          npm install -g appium
          appium &

      - name: Run Appium tests
        env:
          APPIUM_SERVER_URL: http://localhost:4723
        run: |
          # Replace with your test command, e.g., for pytest or npm test
          # For example, if using Python:
          pip install -r requirements.txt
          pytest --html=report.html --self-contained-html
