name: Appium Android Tests

on:
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Deployment message'
        required: true
        default: 'Run Appium tests'

jobs:
  test:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install -g appium
        npm install -g appium-doctor
        appium-doctor --android

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses

    - name: Install Android packages
      run: sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "emulator" "system-images;android-30;google_apis;x86_64"

    - name: Create AVD
      run: |
        echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" -d "pixel"

    - name: Start Emulator
      run: |
        nohup emulator -avd test -no-snapshot-save -noaudio -no-window -gpu swiftshader_indirect > emulator.log 2>&1 &
        brew install coreutils
        gtimeout 300 bash -c 'until adb devices | grep -q emulator; do echo "Waiting for emulator..."; sleep 5; done'
        adb wait-for-device
        adb shell settings put global window_animation_scale 0
        adb shell settings put global transition_animation_scale 0
        adb shell settings put global animator_duration_scale 0
        adb shell input keyevent 82

    - name: Start Appium Server
      run: |
        appium --log-level error --relaxed-security & disown
        sleep 10

    - name: Run Appium Tests
      run: |
        pytest --html=report.html --self-contained-html

    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: report.html

    - name: Cleanup Emulator and Appium
      if: always()
      run: |
        adb emu kill || true
        adb kill-server || true
        pkill -f "appium" || true
