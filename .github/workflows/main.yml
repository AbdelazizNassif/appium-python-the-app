name: Appium Android Tests

on:
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Deployment message'
        required: true
        default: 'Run appium tests'

jobs:
  test:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install -g appium
           
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools: 'latest'

    - name: Accept licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
    - name: Install Android packages
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "emulator" "system-images;android-30;google_apis;x86_64"
      
    - name: Create AVD
      run: |
        echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" -d "pixel"

    - name: Start Android Emulator
      run: |
        $ANDROID_HOME/emulator/emulator -avd test -no-window -noaudio -no-boot-anim -gpu swiftshader_indirect -port 5554 &
        echo "Emulator started in background"
        
    - name: Wait for emulator
      run: |
        adb wait-for-device
        # Wait for full boot completion
        while [ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]; do
          sleep 5
        done
        echo "Emulator fully booted"

    - name: Verify emulator
      run: |
        adb devices
        adb shell pm list packages
        echo "Emulator verification complete"

    - name: Start Appium server
      run: |
        appium --log-level error --relaxed-security &
        sleep 15
        echo "Appium server started"
        
    - name: Run tests
      run: |
        pytest --html=report.html --self-contained-html

    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report
        path: report.html

    - name: Cleanup
      if: always()
      run: |
        adb emu kill || true
        adb kill-server || true
        pkill -f "appium" || true
        pkill -f "emulator" || true
